{
    "sourceFile": "src/main/java/com/vincent/inc/Saturday/util/Sha256PasswordEncoder.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1689363912040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1689363912040,
            "name": "Commit-0",
            "content": "package com.vincent.inc.Saturday.util;\r\n\r\nimport org.apache.commons.codec.digest.DigestUtils;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class Sha256PasswordEncoder implements PasswordEncoder\r\n{\r\n    public String encode(String rawPassword) \r\n    {\r\n        return DigestUtils.sha256Hex(rawPassword);\r\n    }\r\n\r\n    @Override\r\n    public String encode(CharSequence rawPassword) \r\n    {\r\n        return DigestUtils.sha256Hex(rawPassword.toString());\r\n    }\r\n\r\n    public boolean matches(String rawPassword, String encodedPassword) \r\n    {\r\n        return DigestUtils.sha256Hex(rawPassword).equals(encodedPassword);\r\n    }\r\n\r\n    @Override\r\n    public boolean matches(CharSequence rawPassword, String encodedPassword) \r\n    {\r\n        return DigestUtils.sha256Hex(rawPassword.toString()).equals(encodedPassword);\r\n    }\r\n\r\n    public String patchPassword(String encodedOriginPassword, String newPassword) {\r\n        String newEncodedPassword = this.encode(newPassword);\r\n        if(encodedOriginPassword.equals(newEncodedPassword))\r\n            return encodedOriginPassword;\r\n        else\r\n            return newEncodedPassword;\r\n    }\r\n}\r\n"
        }
    ]
}