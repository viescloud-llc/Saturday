{
    "sourceFile": "src/main/java/com/vincent/inc/Saturday/util/Time.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1689363908747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1689363908747,
            "name": "Commit-0",
            "content": "package com.vincent.inc.Saturday.util;\r\n\r\nimport java.time.Duration;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.time.ZoneId;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Builder\r\n@AllArgsConstructor\r\npublic class Time {\r\n    public static final int MAX_MONTH = 12;\r\n    public static final int MAX_HOURS = 24;\r\n    public static final int MAX_MINUTE = 60;\r\n    public static final int MAX_SECOND = 60;\r\n\r\n    public static final ZoneId DEFAULT_ZONE_ID = ZoneId.of(\"America/New_York\");\r\n\r\n    private int year;\r\n    private int month;\r\n    private int day;\r\n    private int hours;\r\n    private int minute;\r\n    private int second;\r\n\r\n    @Builder.Default\r\n    private boolean bypassMax = false;\r\n\r\n    public Time() {\r\n        LocalDate localDate = LocalDate.now(DEFAULT_ZONE_ID);\r\n        LocalTime localTime = LocalTime.now(DEFAULT_ZONE_ID);\r\n\r\n        this.month = localDate.getMonthValue();\r\n        this.day = localDate.getDayOfMonth();\r\n        this.year = localDate.getYear();\r\n        this.hours = localTime.getHour();\r\n        this.minute = localTime.getMinute();\r\n        this.second = localTime.getSecond();\r\n    }\r\n\r\n    public Time(ZoneId zoneId) {\r\n        LocalDate localDate = LocalDate.now(zoneId);\r\n        LocalTime localTime = LocalTime.now(zoneId);\r\n\r\n        this.month = localDate.getMonthValue();\r\n        this.day = localDate.getDayOfMonth();\r\n        this.year = localDate.getYear();\r\n        this.hours = localTime.getHour();\r\n        this.minute = localTime.getMinute();\r\n        this.second = localTime.getSecond();\r\n    }\r\n\r\n    public Time(int year, int month, int day, int hours, int minute, int second) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n        this.hours = hours;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n\r\n    public static Time now() {\r\n        return new Time();\r\n    }\r\n\r\n    public static Time now(ZoneId zoneId) {\r\n        return new Time(zoneId);\r\n    }\r\n\r\n    public LocalDate toLocalDate() {\r\n        return LocalDate.of(this.year, this.month, this.day);\r\n    }\r\n\r\n    public LocalTime toLocalTime() {\r\n        return LocalTime.of(this.hours, this.minute, this.second);\r\n    }\r\n\r\n    public boolean isBefore(Time time) {\r\n        if(this.toLocalDate().isBefore(time.toLocalDate()))\r\n            return true;\r\n\r\n        if(this.toLocalTime().isBefore(time.toLocalTime()))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public boolean isAfter(Time time) {\r\n        if(this.toLocalDate().isAfter(time.toLocalDate()))\r\n            return true;\r\n\r\n        if(this.toLocalTime().isAfter(time.toLocalTime()))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    public int getMaxDay(int month) {\r\n        switch(month) {\r\n            case 2:\r\n                return 28;\r\n            case 4:\r\n            case 6:\r\n            case 9:\r\n            case 11:\r\n                return 30;\r\n            default:\r\n                return 31;\r\n        }\r\n    }\r\n\r\n    public int getMaxDay() {\r\n        return this.getMaxDay(this.month);\r\n    }\r\n\r\n    public Time increaseYear(int year) {\r\n        this.year += year;\r\n        return this;\r\n    }\r\n\r\n    public Time increaseMonth(int month) {\r\n        this.month += month;\r\n        if(!this.bypassMax && this.month > MAX_MONTH) {\r\n            this.increaseYear(this.month / MAX_MONTH);\r\n            this.month = this.month % MAX_MONTH;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public Time increaseDay(int day) {\r\n        this.day += day;\r\n        int MAX_DAY = this.getMaxDay();\r\n        if(!this.bypassMax && this.day > MAX_DAY) {\r\n            this.increaseMonth(this.day / MAX_DAY);\r\n            this.day = this.day % this.getMaxDay(this.month);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public Time increaseHours(int hours) {\r\n        this.hours += hours;\r\n        if(!this.bypassMax && this.hours >= MAX_HOURS) {\r\n            this.increaseDay(this.hours / MAX_HOURS);\r\n            this.hours = this.hours % MAX_HOURS;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public Time increaseMinute(int minute) {\r\n        this.minute += minute;\r\n        if(!this.bypassMax && this.minute >= MAX_MINUTE) {\r\n            this.increaseHours(this.minute / MAX_MINUTE);\r\n            this.minute = this.minute % MAX_MINUTE;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public Time increaseSecond(int second) {\r\n        this.second += second;\r\n        if(!this.bypassMax && this.second >= MAX_SECOND) {\r\n            this.increaseMinute(this.second / MAX_SECOND);\r\n            this.second = this.second % MAX_SECOND;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public Time increaseTime(Time time) {\r\n        this.increaseYear(time.getYear());\r\n        this.increaseMonth(time.getMonth());\r\n        this.increaseDay(this.getDay());\r\n        this.increaseHours(this.getHours());\r\n        this.increaseMinute(this.getMinute());\r\n        this.increaseSecond(this.getSecond());\r\n        return this;\r\n    }\r\n\r\n    public String toSpring() {\r\n        return String.format(\"%s | %s\", this.getDate(), this.getTime());\r\n    }\r\n\r\n    public String getDate() {\r\n        return String.format(\"%s/%s/%s\", this.month, this.day, this.year);\r\n    }\r\n\r\n    public String getTime() {\r\n        return String.format(\"%s:%s:%s\", this.hours, this.minute, this.second);\r\n    }\r\n\r\n    public double sumMinutes() {\r\n        double yearToMonth = (this.year * 12) + this.month;\r\n        double monthToDay = (yearToMonth * 30) + this.day;\r\n        double dayToHours = (monthToDay * 24) + this.hours;\r\n        double hoursToMinutes = (dayToHours * 60) + this.minute;\r\n        double secondToMinutes = (double)this.second / 60;\r\n        return hoursToMinutes + secondToMinutes;\r\n    }\r\n\r\n    public long sumSeconds() {\r\n        double sumMinutes = this.sumMinutes();\r\n        return (long) (sumMinutes * 60);\r\n    }\r\n\r\n    public Duration toDuration() {\r\n        var zero = new Time(0, 0, 0, 0, 0, 0);\r\n\r\n        var timeTarget = this.toLocalTime();\r\n        var timeDuration = Duration.between(zero.toLocalTime(), timeTarget);\r\n\r\n        var dayTarget = this.toLocalDate();\r\n        var dayDuration = Duration.between(zero.toLocalDate(), dayTarget);\r\n\r\n        var duration = timeDuration.plus(dayDuration);\r\n\r\n        return duration;\r\n    }\r\n}\r\n"
        }
    ]
}